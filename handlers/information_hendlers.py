from aiogram import F, Router
from aiogram.filters import StateFilter
from aiogram.types import Message
from FSM import StateInformation, StateAccount
from keyboard import (keyboard_feedback, keyboard_back,
                      keyboard_personal_account, keyboard_inform_menu,
                      keyboard_approval_card)
from database import is_card, LEXICON

router = Router()
quality = ['–û—Ç–∑—ã–≤ –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è', '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã', '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–µ', '–í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è']


@router.message(F.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', StateFilter(StateInformation.waiting_for_menu_information))
async def command_feedback(message: Message, state: StateInformation):
    await message.answer(text=LEXICON['–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'], reply_markup=keyboard_feedback)
    await state.set_state(StateInformation.waiting_for_feedback)


@router.message(F.text.in_(quality), StateFilter(StateInformation.waiting_for_feedback))
async def command_feedback(message: Message, state: StateInformation):
    await message.answer(text=LEXICON['–ö–∞—á–µ—Å—Ç–≤–æ'], reply_markup=keyboard_back)
    await state.set_state(StateInformation.waiting_for_quality_information)


@router.message(F.text != '‚óÄÔ∏è –ù–∞–∑–∞–¥', StateFilter(StateInformation.waiting_for_quality_information))
async def command_feedback(message: Message, state: StateInformation):
    await message.answer(text=LEXICON['–û—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç'], reply_markup=keyboard_back)
    await state.set_state(StateInformation.waiting_for_back)


@router.message(F.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥', StateFilter(StateInformation.waiting_for_back))
async def command_feedback(message: Message, state: StateInformation):
        await message.answer(text=LEXICON['–ú–µ–Ω—é'], reply_markup=keyboard_feedback)
        await state.set_state(StateInformation.waiting_for_feedback)


@router.message(F.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥', StateFilter(StateInformation.waiting_for_quality_information))
async def command_feedback(message: Message, state: StateInformation):
    await message.answer(text=LEXICON['–ú–µ–Ω—é'], reply_markup=keyboard_feedback)
    await state.set_state(StateInformation.waiting_for_feedback)


@router.message(F.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥', StateFilter(StateInformation.waiting_for_feedback))
async def command_feedback(message: Message, state: StateInformation):
    await message.answer(text=LEXICON['–ú–µ–Ω—é'], reply_markup=keyboard_inform_menu)
    await state.set_state(StateInformation.waiting_for_menu_information)


@router.message(F.text == '–ë–∞–ª–∞–Ω—Å', StateFilter(StateInformation.waiting_for_menu_information))
async def command_feedback(message: Message, state: StateInformation):
    data = await state.get_data()
    contact_number = data.get('contact_number')
    card = await is_card(contact_number)

    if not card:
        await message.answer(LEXICON['–ù–µ—Ç –∫–∞—Ä—Ç—ã'], reply_markup=keyboard_approval_card)
    else:
        await message.answer(text='–í–∞—à–∏ üí∞\n'
                        f'–ö–∞—Ä—Ç–∞: {card["number"]}\n'
                        f'–ë–∞–ª–∞–Ω—Å: {card["balans"]} –±–æ–Ω.')


@router.message(F.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥', StateFilter(StateInformation.waiting_for_menu_information))
async def command_feedback(message: Message, state: StateInformation):
    await message.answer(text=LEXICON['–ú–µ–Ω—é'], reply_markup=keyboard_personal_account)
    await state.set_state(StateAccount.waiting_for_menu_account)